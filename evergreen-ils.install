post_install() {
    ln -sf /openils/var/web/xul/rel_2_0_6/server/openils/var/web/xul/ /openils/var/web/xul/server
    cp /openils/etc/opensrf.xml.example /opensrf/conf/opensrf.xml
    ln -s /opensrf/conf/opensrf.xml /openils/etc/
    cp /openils/etc/opensrf_core.xml.example /opensrf/conf/opensrf_core.xml
    ln -s /opensrf/conf/opensrf_core.xml /openils/etc/
    cp /openils/etc/oils_web.xml.example /opensrf/conf/oils_web.xml
    ln -s /opensrf/conf/oils_web.xml /openils/etc/
    
    /etc/rc.d/postgresql start
    createdb -U postgres -T template0 --lc-ctype=C --lc-collate=C -E UNICODE evergreen
    createlang -U postgres plperl   evergreen
    createlang -U postgres plperlu  evergreen
    createlang -U postgres plpgsql  evergreen
    psql  -U postgres -f /usr/share/postgresql/contrib/tablefunc.sql evergreen
    psql  -U postgres -f /usr/share/postgresql/contrib/tsearch2.sql  evergreen
    psql  -U postgres -f /usr/share/postgresql/contrib/pgxml.sql     evergreen
    createuser -U postgres -P -s evergreen
    
    perl /openils/support-scripts/eg_db_config.pl --update-config \
           --service all --create-schema --create-offline \
           --user evergreen --password fixmepls --hostname localhost --port 5432 \
           --database evergreen --admin-user admin --admin-pass openils
    
    echo "Example apache configuration placed at /etc/httpd/conf/eg.conf - you need"
    echo "to incorporate this into your actual configuration for Evergreen to work."
    
    if [ ! -d "/etc/httpd/ssl" ]; then
        mkdir /etc/httpd/ssl
        cd /etc/httpd/ssl
        openssl req -new -x509 -days 365 -nodes -out server.crt -keyout server.key
    fi
    
    if grep -q "export PERL5LIB=/openils/lib/perl5:\$PERL5LIB" /home/opensrf/.bashrc
        then echo "export PERL5LIB=/openils/lib/perl5:\$PERL5LIB" | sudo -u opensrf tee -a /home/opensrf/.bashrc
    fi
    
    chown -R opensrf:opensrf /openils/ /opensrf/
}